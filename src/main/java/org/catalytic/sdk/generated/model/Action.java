/*
 * Catalytic SDK API
 *  ## API for the Catalytic SDK 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@catalytic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.catalytic.sdk.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.catalytic.sdk.generated.model.ActionInputDefinition;
import org.catalytic.sdk.generated.model.ActionOutputDefinition;

/**
 * Represents an Action that can be configured within a Workflow.
 */
@ApiModel(description = "Represents an Action that can be configured within a Workflow.")

public class Action {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_TEAM_NAME = "teamName";
  @SerializedName(SERIALIZED_NAME_TEAM_NAME)
  private String teamName;

  public static final String SERIALIZED_NAME_REFERENCE_NAME = "referenceName";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NAME)
  private String referenceName;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_CREATED_BY_EMAIL = "createdByEmail";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_EMAIL)
  private String createdByEmail;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_REQUIRED_WORKER_TAGS = "requiredWorkerTags";
  @SerializedName(SERIALIZED_NAME_REQUIRED_WORKER_TAGS)
  private List<String> requiredWorkerTags = null;

  public static final String SERIALIZED_NAME_INPUTS = "inputs";
  @SerializedName(SERIALIZED_NAME_INPUTS)
  private List<ActionInputDefinition> inputs = null;

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private List<ActionOutputDefinition> outputs = null;

  public static final String SERIALIZED_NAME_IS_PUBLISHED = "isPublished";
  @SerializedName(SERIALIZED_NAME_IS_PUBLISHED)
  private Boolean isPublished;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_ORIGINAL_ACTION_ID = "originalActionId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ACTION_ID)
  private UUID originalActionId;

  public static final String SERIALIZED_NAME_HELP_DOCUMENT_PATH = "helpDocumentPath";
  @SerializedName(SERIALIZED_NAME_HELP_DOCUMENT_PATH)
  private String helpDocumentPath;

  public static final String SERIALIZED_NAME_ICON_SVG = "iconSvg";
  @SerializedName(SERIALIZED_NAME_ICON_SVG)
  private String iconSvg;

  public static final String SERIALIZED_NAME_INTEGRATION_IDS = "integrationIds";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_IDS)
  private List<String> integrationIds = null;

  public static final String SERIALIZED_NAME_INTEGRATION_REQUIRED = "integrationRequired";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_REQUIRED)
  private Boolean integrationRequired;


  public Action id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique ID of the Action
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of the Action")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public Action teamName(String teamName) {
    
    this.teamName = teamName;
    return this;
  }

   /**
   * The name of the Catalytic team in which this Action was created
   * @return teamName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the Catalytic team in which this Action was created")

  public String getTeamName() {
    return teamName;
  }


  public void setTeamName(String teamName) {
    this.teamName = teamName;
  }


  public Action referenceName(String referenceName) {
    
    this.referenceName = referenceName;
    return this;
  }

   /**
   * Get referenceName
   * @return referenceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReferenceName() {
    return referenceName;
  }


  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public Action version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of this action, relative to the first version  referenced by OriginalActionId
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of this action, relative to the first version  referenced by OriginalActionId")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }


  public Action appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * The AppId string used to reference the action in Workflows
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The AppId string used to reference the action in Workflows")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public Action createdByEmail(String createdByEmail) {
    
    this.createdByEmail = createdByEmail;
    return this;
  }

   /**
   * The email of the user who created this action
   * @return createdByEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email of the user who created this action")

  public String getCreatedByEmail() {
    return createdByEmail;
  }


  public void setCreatedByEmail(String createdByEmail) {
    this.createdByEmail = createdByEmail;
  }


  public Action name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The descriptive name of the Action. This is what Builders will see when  searching for or configuring this action in a Workflow.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The descriptive name of the Action. This is what Builders will see when  searching for or configuring this action in a Workflow.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Action description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the Action. Builders can search against this text, and will   see this text in search results when searching for Actions.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the Action. Builders can search against this text, and will   see this text in search results when searching for Actions.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Action tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Action addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Action requiredWorkerTags(List<String> requiredWorkerTags) {
    
    this.requiredWorkerTags = requiredWorkerTags;
    return this;
  }

  public Action addRequiredWorkerTagsItem(String requiredWorkerTagsItem) {
    if (this.requiredWorkerTags == null) {
      this.requiredWorkerTags = new ArrayList<>();
    }
    this.requiredWorkerTags.add(requiredWorkerTagsItem);
    return this;
  }

   /**
   * A set of tags which must be present on a worker for an action  of this type to be routed to that worker. For example, if this  includes \&quot;Azure\&quot;, then only workers that are also tagged with  \&quot;Azure\&quot; will be assigned tasks of this action type.
   * @return requiredWorkerTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of tags which must be present on a worker for an action  of this type to be routed to that worker. For example, if this  includes \"Azure\", then only workers that are also tagged with  \"Azure\" will be assigned tasks of this action type.")

  public List<String> getRequiredWorkerTags() {
    return requiredWorkerTags;
  }


  public void setRequiredWorkerTags(List<String> requiredWorkerTags) {
    this.requiredWorkerTags = requiredWorkerTags;
  }


  public Action inputs(List<ActionInputDefinition> inputs) {
    
    this.inputs = inputs;
    return this;
  }

  public Action addInputsItem(ActionInputDefinition inputsItem) {
    if (this.inputs == null) {
      this.inputs = new ArrayList<>();
    }
    this.inputs.add(inputsItem);
    return this;
  }

   /**
   * Get inputs
   * @return inputs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ActionInputDefinition> getInputs() {
    return inputs;
  }


  public void setInputs(List<ActionInputDefinition> inputs) {
    this.inputs = inputs;
  }


  public Action outputs(List<ActionOutputDefinition> outputs) {
    
    this.outputs = outputs;
    return this;
  }

  public Action addOutputsItem(ActionOutputDefinition outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

   /**
   * Get outputs
   * @return outputs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ActionOutputDefinition> getOutputs() {
    return outputs;
  }


  public void setOutputs(List<ActionOutputDefinition> outputs) {
    this.outputs = outputs;
  }


  public Action isPublished(Boolean isPublished) {
    
    this.isPublished = isPublished;
    return this;
  }

   /**
   * Indicates whether or not this action is visible to builders when  searching for actions to add to a Workflow
   * @return isPublished
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether or not this action is visible to builders when  searching for actions to add to a Workflow")

  public Boolean getIsPublished() {
    return isPublished;
  }


  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }


  public Action metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * A JSON-formatted meta data. This meta data is passed along unmodified to the   action implementation when an action task is executed
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A JSON-formatted meta data. This meta data is passed along unmodified to the   action implementation when an action task is executed")

  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public Action originalActionId(UUID originalActionId) {
    
    this.originalActionId = originalActionId;
    return this;
  }

   /**
   * Optional original action version that this version replaces.  E.g., if this is the third version of this action, this should  be the ID of the first version
   * @return originalActionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional original action version that this version replaces.  E.g., if this is the third version of this action, this should  be the ID of the first version")

  public UUID getOriginalActionId() {
    return originalActionId;
  }


  public void setOriginalActionId(UUID originalActionId) {
    this.originalActionId = originalActionId;
  }


  public Action helpDocumentPath(String helpDocumentPath) {
    
    this.helpDocumentPath = helpDocumentPath;
    return this;
  }

   /**
   * Optional relative path to the markdown help file on the help site  E.g., \&quot;_integrations/sharepoint.md\&quot;
   * @return helpDocumentPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional relative path to the markdown help file on the help site  E.g., \"_integrations/sharepoint.md\"")

  public String getHelpDocumentPath() {
    return helpDocumentPath;
  }


  public void setHelpDocumentPath(String helpDocumentPath) {
    this.helpDocumentPath = helpDocumentPath;
  }


  public Action iconSvg(String iconSvg) {
    
    this.iconSvg = iconSvg;
    return this;
  }

   /**
   * Optional contents of the SVG Icon for this action  This should be the XML SVG contents, not a URI to the file
   * @return iconSvg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional contents of the SVG Icon for this action  This should be the XML SVG contents, not a URI to the file")

  public String getIconSvg() {
    return iconSvg;
  }


  public void setIconSvg(String iconSvg) {
    this.iconSvg = iconSvg;
  }


  public Action integrationIds(List<String> integrationIds) {
    
    this.integrationIds = integrationIds;
    return this;
  }

  public Action addIntegrationIdsItem(String integrationIdsItem) {
    if (this.integrationIds == null) {
      this.integrationIds = new ArrayList<>();
    }
    this.integrationIds.add(integrationIdsItem);
    return this;
  }

   /**
   * Ids of Integration Definitions for which Connections may be attached to executions of this Action
   * @return integrationIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ids of Integration Definitions for which Connections may be attached to executions of this Action")

  public List<String> getIntegrationIds() {
    return integrationIds;
  }


  public void setIntegrationIds(List<String> integrationIds) {
    this.integrationIds = integrationIds;
  }


  public Action integrationRequired(Boolean integrationRequired) {
    
    this.integrationRequired = integrationRequired;
    return this;
  }

   /**
   * Indicates whether an Integration Connection is required when executing this Action
   * @return integrationRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether an Integration Connection is required when executing this Action")

  public Boolean getIntegrationRequired() {
    return integrationRequired;
  }


  public void setIntegrationRequired(Boolean integrationRequired) {
    this.integrationRequired = integrationRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Action action = (Action) o;
    return Objects.equals(this.id, action.id) &&
        Objects.equals(this.teamName, action.teamName) &&
        Objects.equals(this.referenceName, action.referenceName) &&
        Objects.equals(this.version, action.version) &&
        Objects.equals(this.appId, action.appId) &&
        Objects.equals(this.createdByEmail, action.createdByEmail) &&
        Objects.equals(this.name, action.name) &&
        Objects.equals(this.description, action.description) &&
        Objects.equals(this.tags, action.tags) &&
        Objects.equals(this.requiredWorkerTags, action.requiredWorkerTags) &&
        Objects.equals(this.inputs, action.inputs) &&
        Objects.equals(this.outputs, action.outputs) &&
        Objects.equals(this.isPublished, action.isPublished) &&
        Objects.equals(this.metadata, action.metadata) &&
        Objects.equals(this.originalActionId, action.originalActionId) &&
        Objects.equals(this.helpDocumentPath, action.helpDocumentPath) &&
        Objects.equals(this.iconSvg, action.iconSvg) &&
        Objects.equals(this.integrationIds, action.integrationIds) &&
        Objects.equals(this.integrationRequired, action.integrationRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, teamName, referenceName, version, appId, createdByEmail, name, description, tags, requiredWorkerTags, inputs, outputs, isPublished, metadata, originalActionId, helpDocumentPath, iconSvg, integrationIds, integrationRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Action {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    teamName: ").append(toIndentedString(teamName)).append("\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    createdByEmail: ").append(toIndentedString(createdByEmail)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    requiredWorkerTags: ").append(toIndentedString(requiredWorkerTags)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    isPublished: ").append(toIndentedString(isPublished)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    originalActionId: ").append(toIndentedString(originalActionId)).append("\n");
    sb.append("    helpDocumentPath: ").append(toIndentedString(helpDocumentPath)).append("\n");
    sb.append("    iconSvg: ").append(toIndentedString(iconSvg)).append("\n");
    sb.append("    integrationIds: ").append(toIndentedString(integrationIds)).append("\n");
    sb.append("    integrationRequired: ").append(toIndentedString(integrationRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

