/*
 * Catalytic SDK API
 *  ## API for the Catalytic SDK 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@catalytic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.catalytic.sdk.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;

/**
 * Authentication configuration settings for the Integration Definition
 */
@ApiModel(description = "Authentication configuration settings for the Integration Definition")

public class IntegrationConfiguration {
  public static final String SERIALIZED_NAME_CLIENT_ID = "clientId";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_SECRET = "clientSecret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private String clientSecret;

  public static final String SERIALIZED_NAME_TOKEN_PATH = "tokenPath";
  @SerializedName(SERIALIZED_NAME_TOKEN_PATH)
  private String tokenPath;

  public static final String SERIALIZED_NAME_REVOKE_PATH = "revokePath";
  @SerializedName(SERIALIZED_NAME_REVOKE_PATH)
  private String revokePath;

  public static final String SERIALIZED_NAME_SITE = "site";
  @SerializedName(SERIALIZED_NAME_SITE)
  private URI site;

  public static final String SERIALIZED_NAME_AUTHORIZE_BASE_URL = "authorizeBaseUrl";
  @SerializedName(SERIALIZED_NAME_AUTHORIZE_BASE_URL)
  private URI authorizeBaseUrl;

  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  private List<String> scopes = null;

  public static final String SERIALIZED_NAME_USE_BODY_AUTH = "useBodyAuth";
  @SerializedName(SERIALIZED_NAME_USE_BODY_AUTH)
  private Boolean useBodyAuth;


  public IntegrationConfiguration clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Client Id corresponding to the custom OAuth application
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Client Id corresponding to the custom OAuth application")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public IntegrationConfiguration clientSecret(String clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Client Secret corresponding to the custom OAuth application
   * @return clientSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Client Secret corresponding to the custom OAuth application")

  public String getClientSecret() {
    return clientSecret;
  }


  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public IntegrationConfiguration tokenPath(String tokenPath) {
    
    this.tokenPath = tokenPath;
    return this;
  }

   /**
   * Token Path corresponding to the custom OAuth application
   * @return tokenPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Token Path corresponding to the custom OAuth application")

  public String getTokenPath() {
    return tokenPath;
  }


  public void setTokenPath(String tokenPath) {
    this.tokenPath = tokenPath;
  }


  public IntegrationConfiguration revokePath(String revokePath) {
    
    this.revokePath = revokePath;
    return this;
  }

   /**
   * Token Revoke Path corresponding to the custom OAuth application
   * @return revokePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Token Revoke Path corresponding to the custom OAuth application")

  public String getRevokePath() {
    return revokePath;
  }


  public void setRevokePath(String revokePath) {
    this.revokePath = revokePath;
  }


  public IntegrationConfiguration site(URI site) {
    
    this.site = site;
    return this;
  }

   /**
   * The site corresponding to the custom OAuth application
   * @return site
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The site corresponding to the custom OAuth application")

  public URI getSite() {
    return site;
  }


  public void setSite(URI site) {
    this.site = site;
  }


  public IntegrationConfiguration authorizeBaseUrl(URI authorizeBaseUrl) {
    
    this.authorizeBaseUrl = authorizeBaseUrl;
    return this;
  }

   /**
   * The Authorization base url corresponding to the custom OAuth application
   * @return authorizeBaseUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The Authorization base url corresponding to the custom OAuth application")

  public URI getAuthorizeBaseUrl() {
    return authorizeBaseUrl;
  }


  public void setAuthorizeBaseUrl(URI authorizeBaseUrl) {
    this.authorizeBaseUrl = authorizeBaseUrl;
  }


  public IntegrationConfiguration scopes(List<String> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public IntegrationConfiguration addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * The scopes corresponding to the custom OAuth application
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The scopes corresponding to the custom OAuth application")

  public List<String> getScopes() {
    return scopes;
  }


  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }


  public IntegrationConfiguration useBodyAuth(Boolean useBodyAuth) {
    
    this.useBodyAuth = useBodyAuth;
    return this;
  }

   /**
   * Whether to supply authorization credentials in the body of the request
   * @return useBodyAuth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to supply authorization credentials in the body of the request")

  public Boolean getUseBodyAuth() {
    return useBodyAuth;
  }


  public void setUseBodyAuth(Boolean useBodyAuth) {
    this.useBodyAuth = useBodyAuth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationConfiguration integrationConfiguration = (IntegrationConfiguration) o;
    return Objects.equals(this.clientId, integrationConfiguration.clientId) &&
        Objects.equals(this.clientSecret, integrationConfiguration.clientSecret) &&
        Objects.equals(this.tokenPath, integrationConfiguration.tokenPath) &&
        Objects.equals(this.revokePath, integrationConfiguration.revokePath) &&
        Objects.equals(this.site, integrationConfiguration.site) &&
        Objects.equals(this.authorizeBaseUrl, integrationConfiguration.authorizeBaseUrl) &&
        Objects.equals(this.scopes, integrationConfiguration.scopes) &&
        Objects.equals(this.useBodyAuth, integrationConfiguration.useBodyAuth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, clientSecret, tokenPath, revokePath, site, authorizeBaseUrl, scopes, useBodyAuth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationConfiguration {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    tokenPath: ").append(toIndentedString(tokenPath)).append("\n");
    sb.append("    revokePath: ").append(toIndentedString(revokePath)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    authorizeBaseUrl: ").append(toIndentedString(authorizeBaseUrl)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    useBodyAuth: ").append(toIndentedString(useBodyAuth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

