/*
 * Catalytic SDK API
 *  ## API for the Catalytic SDK 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@catalytic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.catalytic.sdk.generated.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

/**
 * Represents an Instance of a Workflow
 */
@ApiModel(description = "Represents an Instance of a Workflow")

public class Instance {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_WORKFLOW_ID = "workflowId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_ID)
  private UUID workflowId;

  public static final String SERIALIZED_NAME_ROOT_INSTANCE_ID = "rootInstanceId";
  @SerializedName(SERIALIZED_NAME_ROOT_INSTANCE_ID)
  private UUID rootInstanceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TEAM_NAME = "teamName";
  @SerializedName(SERIALIZED_NAME_TEAM_NAME)
  private String teamName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_IS_TEST = "isTest";
  @SerializedName(SERIALIZED_NAME_IS_TEST)
  private Boolean isTest;

  public static final String SERIALIZED_NAME_OWNER_EMAIL = "ownerEmail";
  @SerializedName(SERIALIZED_NAME_OWNER_EMAIL)
  private String ownerEmail;

  public static final String SERIALIZED_NAME_CREATED_BY_EMAIL = "createdByEmail";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_EMAIL)
  private String createdByEmail;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<Field> fields = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private InstanceStatus status;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_FIELD_VISIBILITY = "fieldVisibility";
  @SerializedName(SERIALIZED_NAME_FIELD_VISIBILITY)
  private FieldVisibility fieldVisibility;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private InstanceVisibility visibility;

  public static final String SERIALIZED_NAME_VISIBLE_TO_USER_EMAILS = "visibleToUserEmails";
  @SerializedName(SERIALIZED_NAME_VISIBLE_TO_USER_EMAILS)
  private List<String> visibleToUserEmails = null;


  public Instance id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique ID of the Instance
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The unique ID of the Instance")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public Instance workflowId(UUID workflowId) {
    
    this.workflowId = workflowId;
    return this;
  }

   /**
   * The unique ID of the Workflow this Instance was started from
   * @return workflowId
  **/
  @ApiModelProperty(required = true, value = "The unique ID of the Workflow this Instance was started from")

  public UUID getWorkflowId() {
    return workflowId;
  }


  public void setWorkflowId(UUID workflowId) {
    this.workflowId = workflowId;
  }


  public Instance rootInstanceId(UUID rootInstanceId) {
    
    this.rootInstanceId = rootInstanceId;
    return this;
  }

   /**
   * The unique ID of the root workflow instance which this Instance was started from
   * @return rootInstanceId
  **/
  @ApiModelProperty(required = true, value = "The unique ID of the root workflow instance which this Instance was started from")

  public UUID getRootInstanceId() {
    return rootInstanceId;
  }


  public void setRootInstanceId(UUID rootInstanceId) {
    this.rootInstanceId = rootInstanceId;
  }


  public Instance name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The descriptive name of the Instance
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The descriptive name of the Instance")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Instance teamName(String teamName) {
    
    this.teamName = teamName;
    return this;
  }

   /**
   * The name of the Catalytic team in which this Instance was started
   * @return teamName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The name of the Catalytic team in which this Instance was started")

  public String getTeamName() {
    return teamName;
  }


  public void setTeamName(String teamName) {
    this.teamName = teamName;
  }


  public Instance description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the Instance
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the Instance")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Instance category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * A descriptive grouping for the Instance
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A descriptive grouping for the Instance")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public Instance isTest(Boolean isTest) {
    
    this.isTest = isTest;
    return this;
  }

   /**
   * Whether or not this instance was started as a test
   * @return isTest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not this instance was started as a test")

  public Boolean getIsTest() {
    return isTest;
  }


  public void setIsTest(Boolean isTest) {
    this.isTest = isTest;
  }


  public Instance ownerEmail(String ownerEmail) {
    
    this.ownerEmail = ownerEmail;
    return this;
  }

   /**
   * The email address of the user who owns this Instance
   * @return ownerEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email address of the user who owns this Instance")

  public String getOwnerEmail() {
    return ownerEmail;
  }


  public void setOwnerEmail(String ownerEmail) {
    this.ownerEmail = ownerEmail;
  }


  public Instance createdByEmail(String createdByEmail) {
    
    this.createdByEmail = createdByEmail;
    return this;
  }

   /**
   * The email address of the user who created this Instance
   * @return createdByEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email address of the user who created this Instance")

  public String getCreatedByEmail() {
    return createdByEmail;
  }


  public void setCreatedByEmail(String createdByEmail) {
    this.createdByEmail = createdByEmail;
  }


  public Instance fields(List<Field> fields) {
    
    this.fields = fields;
    return this;
  }

  public Instance addFieldsItem(Field fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * A collection of the Fields belonging to this Instance
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A collection of the Fields belonging to this Instance")

  public List<Field> getFields() {
    return fields;
  }


  public void setFields(List<Field> fields) {
    this.fields = fields;
  }


  public Instance status(InstanceStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstanceStatus getStatus() {
    return status;
  }


  public void setStatus(InstanceStatus status) {
    this.status = status;
  }


  public Instance startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The start date of the instance
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The start date of the instance")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public Instance endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The end date of the instance, or null if the step has not started
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The end date of the instance, or null if the step has not started")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public Instance fieldVisibility(FieldVisibility fieldVisibility) {
    
    this.fieldVisibility = fieldVisibility;
    return this;
  }

   /**
   * Get fieldVisibility
   * @return fieldVisibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldVisibility getFieldVisibility() {
    return fieldVisibility;
  }


  public void setFieldVisibility(FieldVisibility fieldVisibility) {
    this.fieldVisibility = fieldVisibility;
  }


  public Instance visibility(InstanceVisibility visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstanceVisibility getVisibility() {
    return visibility;
  }


  public void setVisibility(InstanceVisibility visibility) {
    this.visibility = visibility;
  }


  public Instance visibleToUserEmails(List<String> visibleToUserEmails) {
    
    this.visibleToUserEmails = visibleToUserEmails;
    return this;
  }

  public Instance addVisibleToUserEmailsItem(String visibleToUserEmailsItem) {
    if (this.visibleToUserEmails == null) {
      this.visibleToUserEmails = new ArrayList<>();
    }
    this.visibleToUserEmails.add(visibleToUserEmailsItem);
    return this;
  }

   /**
   * The emails of users who can find and interact with this Instance
   * @return visibleToUserEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The emails of users who can find and interact with this Instance")

  public List<String> getVisibleToUserEmails() {
    return visibleToUserEmails;
  }


  public void setVisibleToUserEmails(List<String> visibleToUserEmails) {
    this.visibleToUserEmails = visibleToUserEmails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Instance instance = (Instance) o;
    return Objects.equals(this.id, instance.id) &&
        Objects.equals(this.workflowId, instance.workflowId) &&
        Objects.equals(this.rootInstanceId, instance.rootInstanceId) &&
        Objects.equals(this.name, instance.name) &&
        Objects.equals(this.teamName, instance.teamName) &&
        Objects.equals(this.description, instance.description) &&
        Objects.equals(this.category, instance.category) &&
        Objects.equals(this.isTest, instance.isTest) &&
        Objects.equals(this.ownerEmail, instance.ownerEmail) &&
        Objects.equals(this.createdByEmail, instance.createdByEmail) &&
        Objects.equals(this.fields, instance.fields) &&
        Objects.equals(this.status, instance.status) &&
        Objects.equals(this.startDate, instance.startDate) &&
        Objects.equals(this.endDate, instance.endDate) &&
        Objects.equals(this.fieldVisibility, instance.fieldVisibility) &&
        Objects.equals(this.visibility, instance.visibility) &&
        Objects.equals(this.visibleToUserEmails, instance.visibleToUserEmails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, workflowId, rootInstanceId, name, teamName, description, category, isTest, ownerEmail, createdByEmail, fields, status, startDate, endDate, fieldVisibility, visibility, visibleToUserEmails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Instance {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    rootInstanceId: ").append(toIndentedString(rootInstanceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    teamName: ").append(toIndentedString(teamName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    isTest: ").append(toIndentedString(isTest)).append("\n");
    sb.append("    ownerEmail: ").append(toIndentedString(ownerEmail)).append("\n");
    sb.append("    createdByEmail: ").append(toIndentedString(createdByEmail)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    fieldVisibility: ").append(toIndentedString(fieldVisibility)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    visibleToUserEmails: ").append(toIndentedString(visibleToUserEmails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

